// Code generated by tool; DO NOT EDIT.
package syntax

type StmtVisitor interface {
	VisitExpressionStmt(*Expression) error
	VisitPrintStmt(*Print) error
	VisitVarStmt(*Var) error
}

type Stmt interface {
	 Accept(StmtVisitor) error
}

type Expression struct {
	Expression Expr
}
func NewExpression(expression Expr) *Expression {
	return &Expression{
		Expression: expression,
	}
}
func (n *Expression) Accept(v StmtVisitor) error {
	return v.VisitExpressionStmt(n)
}

type Print struct {
	Expression Expr
}
func NewPrint(expression Expr) *Print {
	return &Print{
		Expression: expression,
	}
}
func (n *Print) Accept(v StmtVisitor) error {
	return v.VisitPrintStmt(n)
}

type Var struct {
	Name Token
	Initializer Expr
}
func NewVar(name Token, initializer Expr) *Var {
	return &Var{
		Name: name,
		Initializer: initializer,
	}
}
func (n *Var) Accept(v StmtVisitor) error {
	return v.VisitVarStmt(n)
}

